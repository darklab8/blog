package common

import (
	"github.com/darklab8/blog/blog/common/highlight"
	"github.com/darklab8/blog/blog/common/common_static"
	"github.com/darklab8/blog/blog/common/types"
	"strconv"
)

templ LightSwitch() {
	<style>
		.light_switch {
			position: absolute;
			top: 0;
			right: 0;
			padding: 1.5%;
		}
		#light_switch {
			width: 100px;
			height: 100px;
		}
	</style>
	switch types.GetCtx(ctx).Theme {
		case types.ThemeDark:
			<div class="light_switch">
			<a href={ templ.URL(types.GetCtx(ctx).OppositeThemeRoot + types.GetCtx(ctx).Pagepath ) } >
			<img id="light_switch" src={ types.GetCtx(ctx).StaticRoot + "common/switch_to_light.png" }/>
			</a>
			</div>
		case types.ThemeLight:
			<style>
			</style>

			<div class="light_switch">
			<a href={ templ.URL(types.GetCtx(ctx).OppositeThemeRoot  + types.GetCtx(ctx).Pagepath) }>
			<img id="light_switch"  src={ types.GetCtx(ctx).StaticRoot + "common/switch_to_dark.png" }/>
			</a>
			</div>
	}
}

type HtmlOptions struct {
	Title string
	Description string
	OgImage *OgImage
}

/*
https://ogp.me/
view-source:https://the-starport.com/forums/topic/6250/how-to-get-vanilla-freelancer-running-in-2023-no-cd
*/
type OgImage struct {
	Url string
	WidthPx int
	HeightPx int
}

templ Html5(options HtmlOptions) {
	<!DOCTYPE html>
	<html>
	<head>
	<link rel="icon" type="image/x-icon" href={ types.GetCtx(ctx).StaticRoot + "common/favicon.ico" }/>

	<title>{ options.Title + "- blog" }</title>
	<meta property="og:site_name" content="Andrei Novoselov's Blog" />
	<meta property="oog:title" content={ options.Title } />
	if options.Description != "" {
		<meta property="og:description" content={ options.Description } />
	} else {
		<meta property="og:description" content="Andrei Novoselov's articles, pet projects and favourite stuff" />
	}
	if options.OgImage != nil {
		<meta property="og:image" content={ options.OgImage.Url } />
		<meta property="og:image:url" content={ options.OgImage.Url } />
		if options.OgImage.WidthPx != 0 {
			<meta property="og:image:width" content={ strconv.Itoa(options.OgImage.WidthPx) } />
		}
		if options.OgImage.HeightPx != 0 {
			<meta property="og:image:height" content={ strconv.Itoa(options.OgImage.HeightPx) } />
		}
	} else {
		<meta property="og:image" content={ types.GetCtx(ctx).StaticRoot + "about/myphoto.png" } />
		<meta property="og:image:url" content={ types.GetCtx(ctx).StaticRoot + "about/myphoto.png" } />

	}
	switch types.GetCtx(ctx).Theme {
		case types.ThemeDark:
			<style>
			:root {
				--color_hover_link: #4183C4;
				--color_link: #91C3F5;
				--color_quote: orange;
				--color_quote_weight: 500;

				--color-note: #2f81f7;
				--color-tip: #3fb950;
				--color-warning: #d29922;
				--color-severe: #db6d28;
				--color-caution: #f85149;
				--color-important: #a371f7;
			}
			body {
				background: #0D0D0D;
				color: #ddd;
			}
			</style>
		case types.ThemeLight:
			<style>
			:root {
				--color_hover_link: #4183C4;
				--color_link: #33618E;
				--color_quote: #bf7c00;
				--color_quote_weight: 600;

				--color-note: #0969da;
				--color-tip: #1a7f37;
				--color-warning: #9a6700;
				--color-severe: #bc4c00;
				--color-caution: #d1242f;
				--color-important: #8250df;
			}
			body {
				background: #f0f0f0;
				color:#333;
			}
			.hljs {
				filter: brightness(90%);
			}
			</style>
	}
	<style>
		body {
			line-height:1.6;
			font-size:18px;
			padding:0 10px;
		}
		h1,h2,h3{
			line-height:1.2;
		}
	</style>
    @highlight.IncludeHighlight()
	@common_static.ResetCSS()
	@common_static.CommonCSS()
	@common_static.CustomCSS()
	@common_static.CommonJS()
	</head>
	<body>
	@LightSwitch()
	{ children... }
	</body>
	</html>
}

templ BlogFrame() {
	<style>
	.blog_space {
        display: flex;
        flex-direction: row;
        justify-content: center;
        max-width: 100%;

        .blog_body {
            margin-left: 20px;
            margin-right: 20px;
            flex-basis: 800px;
            max-width: 800px;

            display: flex;
            flex-direction: column;
        }

        margin-top: 10px;
        margin-bottom: 100px;
    }
	</style>
	<div class="blog_space">
		<div class="blog_body">
		{ children... }
		</div> 
	</div>
}
