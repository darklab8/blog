package ideas

import (
    "darklab_blog/blog/common"
    "darklab_blog/blog/pet_projects"
	"darklab_blog/blog/common/markdowner"
	"github.com/darklab8/darklab_goutils/goutils/utils/utils_filepath"
	"github.com/darklab8/darklab_goutils/goutils/utils"
	"github.com/darklab8/darklab_goutils/goutils/utils/utils_types"

	"darklab_blog/blog/common/types"
	"darklab_blog/blog/common/urls"
)

type EmptyVars struct {

}

type Idea struct {
	Title string
	Url string
	MdPath utils_types.FilePath

	Anchor string
	Description string
}

var Ideas = []Idea{
	{
		Title: "Aeris CI",
		Url: "idea/aeras_ci.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_aeras_ci", "README.md"),

		Anchor: "aeris",
		Description: "CI agnostic local workflow executor.",
	},
	{
		Title: "Gitdep",
		Url: "idea/git_dep.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_gitdep", "README.md"),

		Anchor: "gitdep",
		Description: "Language agnostic simple yaml dependency management",
	},
	{
		Title: "Vagrant Compose",
		Url: "idea/vagrant_compose.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_vagrant_compose", "README.md"),

		Anchor: "vagrant_compose",
		Description: "Lets have docker-compose style used for multiple vagrant management :)",
	},
	{
		Title: "Auther",
		Url: "idea/auther.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_auther", "README.md"),

		Anchor: "gitdep",
		Description: "Authentificating system for monitoring / admin management tools",
	},
	{
		Title: "Tekton executor",
		Url: "idea/tekton_executor.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_tekton_executor", "README.md"),

		Anchor: "tektox_executor",
		Description: "Integrate smoothly tekton executor into Github Actions",
	},
	{
		Title: "Minecraft chatops",
		Url: "idea/minecraft_chatops.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_minecraft_chatops", "README.md"),

		Anchor: "minecraft_chatops",
		Description: "Optimize minecraft server uptime consuming money only when players are online Or pressed its reactivation to be online",
	},
	{
		Title: "Personal Organizer",
		Url: "idea/organizer.html",
		MdPath: utils_filepath.Join(utils.GetCurrentFolder(), "idea_organizer", "README.md"),

		Anchor: "organizer",
		Description: "Personal organizer in every day life",
	},
}

templ IdeaTemplate(idea Idea) {
    	@common.Html5(common.Title(idea.Title)) {
		@common.BlogFrame() {
			@common.Menu()
            @common.TextHeaderMain(){
            	<a class="text_link" href={ templ.URL(types.GetCtx(ctx).SiteRoot + urls.PetProjectsIdeas) }>Future project ideas</a>
            }
			@common.TextHeaderMain(){ 
				{ idea.Title }
			}
			@common.TextBlock(){
				{ idea.Description }
			}
			<hr/>
            @pet_projects.ProjectsShared()
            @templ.Raw(markdowner.MdToHtml(
				idea.MdPath,
				EmptyVars{}, 
			))
        }
    }
}